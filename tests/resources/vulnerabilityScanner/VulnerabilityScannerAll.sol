pragma solidity ^0.7.0;

contract VulnerableContract
{
    uint public balance = 0;

    mapping(address => uint) public balances;

    function sub(uint256 deposit) public
    {
        require(tx.origin == msg.sender);
        balance = balance - deposit;
    }

    function add(uint8 deposit) public
    {
        require(msg.sender == tx.origin);
        balance = balance + deposit;
    }

    function withdraw() public {
        uint bal = balances[msg.sender];
        require(bal > 0);

        msg.sender.send(bal);

        balances[msg.sender] = 0;
    }

    // Helper function to check the balance of this contract
    function getBalance() public view returns (uint) {
        return address(this).balance;
    }
}